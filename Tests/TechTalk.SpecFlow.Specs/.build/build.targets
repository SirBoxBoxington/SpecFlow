<Project>

  <UsingTask TaskName="TokenReplace" 
             TaskFactory="RoslynCodeTaskFactory"
             AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll" >
    <ParameterGroup>
      <InputPath ParameterType="System.String" Required="true" />
      <OutputPath ParameterType="System.String" Required="true" />
      <Token ParameterType="System.String" Required="true" />
      <Replacement ParameterType="System.String" Required="true" />
    </ParameterGroup>
    <Task>
      <Using Namespace="System"/>
      <Using Namespace="System.IO"/>
      <Code Type="Fragment" Language="cs">
        <![CDATA[
              //Log.LogMessage(MessageImportance.High, Replacement);  
              
              string content = File.ReadAllText(InputPath);
              content = content.Replace(Token, Replacement);
              
              //Log.LogMessage(MessageImportance.High, content);  
              File.WriteAllText(OutputPath, content);
              //Log.LogMessage(MessageImportance.High, content);  

              //Log.LogMessage(MessageImportance.High, File.ReadAllText(OutputPath));
          ]]>
      </Code>
    </Task>
  </UsingTask>

  <Target Name="WriteNuGetVersion" AfterTargets="GetBuildVersion" BeforeTargets="BeforeCompile" Condition="$(DesignTimeBuild) != 'true' OR '$(BuildingProject)' == 'true'">
    <TokenReplace InputPath="$(ProjectDir)\\NuGetPackageVersion.template.cs" OutputPath="$(ProjectDir)\\NuGetPackageVersion.cs" Token="NUGET_VERSION" Replacement="$(NuGetPackageVersion)"/>
    <ItemGroup>
      <Compile Remove="$(ProjectDir)\\NuGetPackageVersion.cs" />
      <Compile Include="$(ProjectDir)\\NuGetPackageVersion.cs" />
    </ItemGroup>
  </Target>

</Project>